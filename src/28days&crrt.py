# -*- coding: utf-8 -*-
"""28days&CRRT.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/17sFAzg-bDBwVpO7BhvdiQupOyeIPF612
"""

# Commented out IPython magic to ensure Python compatibility.
# %pip install tableone

# Commented out IPython magic to ensure Python compatibility.
import matplotlib.pyplot as plt
import pandas as pd
import tableone
from google.colab import files
from google.colab import auth
auth.authenticate_user()
print('Authenticated')

# %load_ext google.colab.data_table

# Commented out IPython magic to ensure Python compatibility.
# change this to change the right project
# %env GOOGLE_CLOUD_PROJECT = sccm-datathon-2023-participant



# Commented out IPython magic to ensure Python compatibility.
# %%bigquery coredataIandII --project sccm-datathon-2023-participant
# SELECT * FROM `sccm-discovery.VIRUS.coredata1_2`

# Commented out IPython magic to ensure Python compatibility.
# # example MIMIC-IV table 1 code here
# %%bigquery coredataviioutcomes --project sccm-datathon-2023-participant
# SELECT * FROM `sccm-discovery.VIRUS.coredata7`

len(coredataIandII)

len(coredataviioutcomes)

merged_df = pd.merge(coredataIandII, coredataviioutcomes, on='icu_id', how='left')

len(merged_df)

"""#Table one grouped by mortality 28 days.

---


0, Alive | 1, Deceased | 2, Loss of Followup/ Not known




"""

merged_df['mort_28_days'] = merged_df['mort_28_days'].replace(0.0, 'Alive')
merged_df['mort_28_days'] = merged_df['mort_28_days'].replace(1.0, 'Deceased')
merged_df['mort_28_days'] = merged_df['mort_28_days'].replace(2.0, 'Loss of Follow up/NotKnown')
merged_df['sex'] = merged_df['sex'].replace(1.0, 'Male')
merged_df['sex'] = merged_df['sex'].replace(2.0, 'Female')
merged_df['sex'] = merged_df['sex'].replace(3.0, 'Intersex')
merged_df['sex'] = merged_df['sex'].replace(4.0, 'Transgender')
merged_df['race'] = merged_df['race'].replace(1.0, 'Other')
merged_df['race'] = merged_df['race'].replace(2.0, 'Other')
merged_df['race'] = merged_df['race'].replace(3.0, 'Black')
merged_df['race'] = merged_df['race'].replace(4.0, 'Other')
merged_df['race'] = merged_df['race'].replace(5.0, 'White')
merged_df['race'] = merged_df['race'].replace(6.0, 'Other')
merged_df['race'] = merged_df['race'].replace(7.0, 'Other')
merged_df['race'] = merged_df['race'].replace(8.0, 'Other')
merged_df['race'] = merged_df['race'].replace(9.0, 'Other')
merged_df['race'] = merged_df['race'].replace(10.0, 'Other')
merged_df['race'] = merged_df['race'].replace(11.0, 'Other')
merged_df['race'] = merged_df['race'].replace(12.0, 'Other')
merged_df['race'] = merged_df['race'].replace(12.0, 'Other')

merged_df['ethnic_group'] = merged_df['ethnic_group'].replace(1.0, 'Hispanic')
merged_df['ethnic_group'] = merged_df['ethnic_group'].replace(0.0, 'Non-Hispanic')
merged_df['ethnic_group'] = merged_df['ethnic_group'].replace(2.0, 'Non-Hispanic')
merged_df['ethnic_group'] = merged_df['ethnic_group'].replace(3.0, 'Non-Hispanic')





#1, American Indian or Alaska Native | 2, Asian American | 3, Black or African American | 4, Native Hawaiian or Other Pacific Islander | 5, White Caucasian | 7, East Asian (China, Hongkong, Japan, S. Korea etc.) | 8, South Asian (India, Pakistan, Sri Lanka etc.) | 9, West Asian (including Arabic) | 10, South East Asian (Philippines, Thailand, Malaysia, Singapore, VietNam etc.) | 11, Mixed Race | 12, Unknown | 6, Other

merged_df['mort_28_days'].unique()

df=tableone.tableone(
    merged_df,
    columns = [
        'sex',
        'bmi_value',
        'mort_28_days',
        'race',
        'age',
        'ethnic_group'
        ],
    categorical = [
       'sex',
        'race',
       'ethnic_group'
        ],
    groupby=[
        'mort_28_days' #
        ]
)

def downloadTable(df,name):
  html_content = df.to_html()

# Save the HTML content to a file
  with open(name, "w") as f:
    f.write(html_content)

# Download the HTML file
  files.download(name)

downloadTable(df,'mort28day.html')

#Table one grouped by CRRT

---


0, Alive | 1, Deceased | 2, Loss of Followup/ Not known

df=tableone.tableone(
    coredataviioutcomes,
    columns = [
        #'sex',
        #'bmi_value',
        'mort_28_days',
        #'race',
        ],
    categorical = [
       # 'sex',
        #'race',
        ],
    groupby=[
        'mort_28_days' #
        ]
)

downloadTable(df,"WHO_region.html")

# Commented out IPython magic to ensure Python compatibility.
# %%bigquery virus_demographics  --project sccm-datathon-2023-participant
# 
# SELECT cd12.*
#   , cd7.hosp_status
# 
# FROM `sccm-discovery.VIRUS.coredata1_2` cd12
# LEFT JOIN `sccm-discovery.VIRUS.coredata7` cd7 on (
#   cd7.icu_id = cd12.icu_id
# 
# )
#

df=tableone.tableone(
    virus_demographics,
    columns = [
        'age', 'sex',
        'bmi_value',
        'race',
        'ethnic_group',
        'hosp_status',
        ],
    categorical = [
        'sex',
        'race',
        'ethnic_group',
        ],
    groupby=[
        'hosp_status' # 1: died, 0: alive
        ]
)
df
